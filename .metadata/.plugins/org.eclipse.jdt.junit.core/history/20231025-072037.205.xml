<?xml version="1.0" encoding="UTF-8"?><testrun name="ParameterizationTestDemo" project="Junitdemo" tests="26" started="26" failures="0" errors="6" ignored="0">
  <testsuite name="ParameterizationTestDemo" time="0.31" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]">
    <testsuite name="MethodSourceTest1(ParameterizationTestDemo)" time="0.065" displayname="MethodSourceTest1(String, String)" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest1(java.lang.String, java.lang.String)]">
      <testcase name="MethodSourceTest1" classname="ParameterizationTestDemo" time="0.065" dynamicTest="true" displayname="[1] java, Programming, Language" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest1(java.lang.String, java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="MethodSourceTest1" classname="ParameterizationTestDemo" time="0.0" dynamicTest="true" displayname="[2] junit, Testing, framework" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest1(java.lang.String, java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="MethodSourceTest1" classname="ParameterizationTestDemo" time="0.063" dynamicTest="true" displayname="[3] Github, api" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest1(java.lang.String, java.lang.String)]/[test-template-invocation:#3]"/>
    </testsuite>
    <testsuite name="csvSourceTest(ParameterizationTestDemo)" time="0.015" displayname="csvSourceTest(String, String)" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]">
      <testcase name="csvSourceTest" classname="ParameterizationTestDemo" time="0.015" dynamicTest="true" displayname="[1] java" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]/[test-template-invocation:#1]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [java.lang.String arg1] in executable [public void ParameterizationTestDemo.csvSourceTest(java.lang.String,java.lang.String)].&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:116)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$0(HierarchicalTestExecutor.java:85)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:86)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:86)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:36)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
      </testcase>
      <testcase name="csvSourceTest" classname="ParameterizationTestDemo" time="0.005" dynamicTest="true" displayname="[2] Programming Lanaguage" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]/[test-template-invocation:#2]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [java.lang.String arg1] in executable [public void ParameterizationTestDemo.csvSourceTest(java.lang.String,java.lang.String)].&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:116)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$0(HierarchicalTestExecutor.java:85)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:86)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:86)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:36)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
      </testcase>
      <testcase name="csvSourceTest" classname="ParameterizationTestDemo" time="0.008" dynamicTest="true" displayname="[3] junit" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]/[test-template-invocation:#3]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [java.lang.String arg1] in executable [public void ParameterizationTestDemo.csvSourceTest(java.lang.String,java.lang.String)].&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:116)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$0(HierarchicalTestExecutor.java:85)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:86)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:86)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:36)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
      </testcase>
      <testcase name="csvSourceTest" classname="ParameterizationTestDemo" time="0.007" dynamicTest="true" displayname="[4] Testing Framework" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]/[test-template-invocation:#4]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [java.lang.String arg1] in executable [public void ParameterizationTestDemo.csvSourceTest(java.lang.String,java.lang.String)].&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:116)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$0(HierarchicalTestExecutor.java:85)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:86)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:86)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:36)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
      </testcase>
      <testcase name="csvSourceTest" classname="ParameterizationTestDemo" time="0.007" dynamicTest="true" displayname="[5] Github" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]/[test-template-invocation:#5]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [java.lang.String arg1] in executable [public void ParameterizationTestDemo.csvSourceTest(java.lang.String,java.lang.String)].&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:116)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$0(HierarchicalTestExecutor.java:85)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:86)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:86)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:36)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
      </testcase>
      <testcase name="csvSourceTest" classname="ParameterizationTestDemo" time="0.005" dynamicTest="true" displayname="[6] api" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:csvSourceTest(java.lang.String, java.lang.String)]/[test-template-invocation:#6]">
        <error>org.junit.jupiter.api.extension.ParameterResolutionException: No ParameterResolver registered for parameter [java.lang.String arg1] in executable [public void ParameterizationTestDemo.csvSourceTest(java.lang.String,java.lang.String)].&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameter(ExecutableInvoker.java:191)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:174)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.resolveParameters(ExecutableInvoker.java:135)&#13;
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:116)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167)&#13;
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110)&#13;
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$0(HierarchicalTestExecutor.java:85)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:114)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:86)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:440)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:272)&#13;
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1384)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:86)&#13;
	at org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:36)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)&#13;
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)&#13;
	at java.util.Iterator.forEachRemaining(Iterator.java:116)&#13;
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)&#13;
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)&#13;
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)&#13;
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)&#13;
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)&#13;
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92)&#13;
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51)&#13;
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)&#13;
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)&#13;
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:82)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="valuesourceTest(ParameterizationTestDemo)" time="0.004" displayname="valuesourceTest(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest(int)]">
      <testcase name="valuesourceTest" classname="ParameterizationTestDemo" time="0.004" dynamicTest="true" displayname="[1] 1" parameters="int" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest(int)]/[test-template-invocation:#1]"/>
      <testcase name="valuesourceTest" classname="ParameterizationTestDemo" time="0.003" dynamicTest="true" displayname="[2] 2" parameters="int" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest(int)]/[test-template-invocation:#2]"/>
      <testcase name="valuesourceTest" classname="ParameterizationTestDemo" time="0.003" dynamicTest="true" displayname="[3] 3" parameters="int" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest(int)]/[test-template-invocation:#3]"/>
      <testcase name="valuesourceTest" classname="ParameterizationTestDemo" time="0.002" dynamicTest="true" displayname="[4] 4" parameters="int" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest(int)]/[test-template-invocation:#4]"/>
      <testcase name="valuesourceTest" classname="ParameterizationTestDemo" time="0.006" dynamicTest="true" displayname="[5] 5" parameters="int" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest(int)]/[test-template-invocation:#5]"/>
    </testsuite>
    <testsuite name="MethodSourceTest(ParameterizationTestDemo)" time="0.007" displayname="MethodSourceTest(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest(java.lang.String)]">
      <testcase name="MethodSourceTest" classname="ParameterizationTestDemo" time="0.007" dynamicTest="true" displayname="[1] apple" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="MethodSourceTest" classname="ParameterizationTestDemo" time="0.014" dynamicTest="true" displayname="[2] banana" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="MethodSourceTest" classname="ParameterizationTestDemo" time="0.01" dynamicTest="true" displayname="[3] orange" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:MethodSourceTest(java.lang.String)]/[test-template-invocation:#3]"/>
    </testsuite>
    <testsuite name="valuesourceTest1(ParameterizationTestDemo)" time="0.006" displayname="valuesourceTest1(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest1(java.lang.String)]">
      <testcase name="valuesourceTest1" classname="ParameterizationTestDemo" time="0.006" dynamicTest="true" displayname="[1] apple" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest1(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="valuesourceTest1" classname="ParameterizationTestDemo" time="0.003" dynamicTest="true" displayname="[2] banana" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest1(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="valuesourceTest1" classname="ParameterizationTestDemo" time="0.004" dynamicTest="true" displayname="[3] pineapple" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest1(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="valuesourceTest1" classname="ParameterizationTestDemo" time="0.015" dynamicTest="true" displayname="[4] orange" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:valuesourceTest1(java.lang.String)]/[test-template-invocation:#4]"/>
    </testsuite>
    <testsuite name="EnumSourceTest(ParameterizationTestDemo)" time="0.002" displayname="EnumSourceTest(Fruits)" parameters="ParameterizationTestDemo$Fruits" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:EnumSourceTest(ParameterizationTestDemo$Fruits)]">
      <testcase name="EnumSourceTest" classname="ParameterizationTestDemo" time="0.002" dynamicTest="true" displayname="[1] apple" parameters="ParameterizationTestDemo$Fruits" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:EnumSourceTest(ParameterizationTestDemo$Fruits)]/[test-template-invocation:#1]"/>
      <testcase name="EnumSourceTest" classname="ParameterizationTestDemo" time="0.016" dynamicTest="true" displayname="[2] banana" parameters="ParameterizationTestDemo$Fruits" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:EnumSourceTest(ParameterizationTestDemo$Fruits)]/[test-template-invocation:#2]"/>
      <testcase name="EnumSourceTest" classname="ParameterizationTestDemo" time="0.005" dynamicTest="true" displayname="[3] orange" parameters="ParameterizationTestDemo$Fruits" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:EnumSourceTest(ParameterizationTestDemo$Fruits)]/[test-template-invocation:#3]"/>
      <testcase name="EnumSourceTest" classname="ParameterizationTestDemo" time="0.003" dynamicTest="true" displayname="[4] grapes" parameters="ParameterizationTestDemo$Fruits" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:EnumSourceTest(ParameterizationTestDemo$Fruits)]/[test-template-invocation:#4]"/>
      <testcase name="EnumSourceTest" classname="ParameterizationTestDemo" time="0.01" dynamicTest="true" displayname="[5] pineapple" parameters="ParameterizationTestDemo$Fruits" uniqueid="[engine:junit-jupiter]/[class:ParameterizationTestDemo]/[test-template:EnumSourceTest(ParameterizationTestDemo$Fruits)]/[test-template-invocation:#5]"/>
    </testsuite>
  </testsuite>
</testrun>
